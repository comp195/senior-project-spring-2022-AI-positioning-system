import numpy
import cv2
#import imagehash
import math
from PIL import Image

def calculate(im1, im2):
    image1 = cv2.cvtColor(numpy.asarray(im1), cv2.COLOR_RGB2BGR)
    image2 = cv2.cvtColor(numpy.asarray(im2), cv2.COLOR_RGB2BGR)
    #hash1 = imagehash.average_hash(im1, hash_size=hash_size)
    #hash2 = imagehash.average_hash(im2, hash_size=hash_size)
    hist1 = cv2.calcHist([image1], [0], None, [256], [0.0, 255.0])
    hist2 = cv2.calcHist([image2], [0], None, [256], [0.0, 255.0])

   #calculate Histogram (coincidence)
    degree = 0
    for i in range(len(hist1)):
        if hist1[i] != hist2[i]:
            degree = degree + (1 - abs(hist1[i] - hist2[i]) / max(hist1[i], hist2[i]))
        else:
            degree = degree + 1
    degree = degree / len(hist1)
    return degree

    #for i in range(1,size):
      #for j in range(1,size):
        #img1 = Image.open('p1.jpg')
        #img2 = Image.open('p2.jpg')

def classify_hist_with_split(im1, im2, size=(256, 256)):
    im1 = Image.open(im1)
    im2 = Image.open(im2)
    # img1 = Image.open('p1.jpg')
    # RGB
    im1 = cv2.cvtColor(numpy.asarray(im1), cv2.COLOR_RGB2BGR)
    im2 = cv2.cvtColor(numpy.asarray(im2), cv2.COLOR_RGB2BGR)
    im1 = cv2.resize(im1, size)
    im2 = cv2.resize(im2, size)
    sub_image1 = cv2.split(im1)
    sub_image2 = cv2.split(im2)
    sub_data = 0
    for im1, im2 in zip(sub_image1, sub_image2):
        sub_data += calculate(im1, im2)
    sub_data = sub_data / 3
    return sub_data


if __name__ == '__main__':
    img1_path = r"C:\Users\chenm\OneDrive\Pictures\Saved Pictures\p1.png"
    img2_path = r"C:\Users\chenm\OneDrive\Pictures\Saved Pictures\p2.png"

    result = classify_hist_with_split(img1_path, img2_path)
    print("please upload your picture by png or jpg type")
    print("youe picture has samiliarity of ï¼š" + "%.2f%%" % (result * 100) + "of the online pictures")
